import cv2
import numpy as np
from paddleocr import PaddleOCR
from matplotlib import pyplot as plt
from PIL import Image
import pytesseract

# 配置 Tesseract 的路径，如果需要
pytesseract.pytesseract.tesseract_cmd = r'YOUR_TESSERACT_PATH'  # 例如，r'C:\Program Files\Tesseract-OCR\tesseract.exe'

# 初始化 PaddleOCR
ocr = PaddleOCR(use_angle_cls=True, lang='en')

def paddleocr_to_tesseract(image_path):
    # 加载图像
    image = cv2.imread(image_path)
    
    # 使用 PaddleOCR 进行识别
    result = ocr.ocr(image_path, cls=True)

    print("PaddleOCR 识别结果:")
    for idx, res in enumerate(result[0]):
        box = res[0]  # 文本框的坐标
        text = res[1][0]  # 识别到的文本
        print(f"Box {idx + 1}: {text}")

        x_min, y_min = int(min([pt[0] for pt in box])), int(min([pt[1] for pt in box]))
        x_max, y_max = int(max([pt[0] for pt in box])), int(max([pt[1] for pt in box]))

        # 绘制红色边框
        cv2.polylines(image, [np.array(box, np.int32)], isClosed=True, color=(0, 0, 255), thickness=2)

        # 裁剪文本框区域
        line_image = image[y_min:y_max, x_min:x_max]

        # 转换为灰度图像并进行二值化
        gray = cv2.cvtColor(line_image, cv2.COLOR_BGR2GRAY)
        _, binary = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)

        # 通过形态学操作去除噪声
        kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (1, 2))
        binary = cv2.morphologyEx(binary, cv2.MORPH_OPEN, kernel)

        # 识别每个字符的轮廓
        contours, _ = cv2.findContours(binary, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
        for contour in contours:
            x, y, w, h = cv2.boundingRect(contour)
            if w > 5 and h > 5:  # 过滤掉噪声
                char_image = line_image[y:y+h, x:x+w]

                # 转换为 PIL 图像以供 Tesseract 识别
                char_image_pil = Image.fromarray(cv2.cvtColor(char_image, cv2.COLOR_BGR2RGB))

                # 使用 Tesseract 识别字符
                char_text = pytesseract.image_to_string(char_image_pil, config='--oem 1 --psm 10').strip()
                
                if char_text:
                    print(f"Character recognized by Tesseract: {char_text}")

                # 绘制蓝色边框
                cv2.rectangle(image, (x_min + x, y_min + y), (x_min + x + w, y_min + y + h), (255, 0, 0), 2)
                cv2.putText(image, char_text, (x_min + x, y_min + y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 0, 0), 1)

    # 显示结果图像
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    plt.axis('off')
    plt.show()

    # 保存结果图像
    cv2.imwrite('output_image_with_boxes.png', image)

# 使用示例
image_path = 'input_image.png'
paddleocr_to_tesseract(image_path)
