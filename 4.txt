def extend_right(input_box, boxes):
    """
    Extend the 'right' of the input box to just before the left side of any box that is directly to its right.
    
    Args:
    input_box (tuple): A tuple of (left, right, top, bottom) for the input box.
    boxes (list of tuples): A list of tuples where each tuple represents a box (left, right, top, bottom).
    
    Returns:
    tuple: The adjusted input_box if a box is found to the right; otherwise, the original input_box.
    """
    input_left, input_right, input_top, input_bottom = input_box
    min_left = None

    # Iterate over each box in the list
    for box in boxes:
        left, right, top, bottom = box
        
        # Check if the current box is to the right of the input box and overlaps vertically
        if left > input_right and not (bottom <= input_top or top >= input_bottom):
            # Find the nearest 'left' of a box to the right of the input box
            if min_left is None or left < min_left:
                min_left = left
    
    # If a nearest right box is found, adjust the 'right' of the input box
    if min_left is not None:
        return (input_left, min_left - 1, input_top, input_bottom)
    
    # If no box is found to the right, return the original input box
    return input_box

# Example usage:
input_box = (10, 20, 10, 20)
boxes = [(25, 35, 15, 25), (40, 50, 10, 20), (21, 30, 5, 15)]
adjusted_box = extend_right(input_box, boxes)
print("Adjusted Input Box:", adjusted_box)

